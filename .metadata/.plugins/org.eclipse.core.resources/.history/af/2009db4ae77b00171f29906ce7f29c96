package com.lin.service;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.Socket;
import java.util.HashSet;
import java.util.Set;

import com.lin.utils.Message;
import com.lin.utils.MessageQueue;

public class ClientSocket implements Runnable {
	public static final String EXIT = "EXIT";
	public static Set<Socket> clientSet;
	static {
		clientSet = new HashSet<Socket>();
	}
	private Socket socket;
	ObjectOutputStream oos = null;
	BufferedReader br = null;
	MessageQueue mq = null;
	public ClientSocket(Socket socket) throws IOException {
		this.socket = socket;
		ClientSocket.clientSet.add(socket);
		br = new BufferedReader(new InputStreamReader(this.socket.getInputStream()));
		mq = MessageQueue.getMessageQueue("outMessageQueue");
	}
	@Override
	public void run() {
		String line = "已经连接";
		Message message = new Message();
		while((!(line.equals(ClientSocket.EXIT)))) {
			message.setAddr(socket.getLocalAddress().toString());
			message.setMessage(line);
			mq.add(message);
			try {
				line = br.readLine();
			} catch (IOException e) {
				System.out.println("数据获取失败");
				
			}
			if(socket.isConnected() && !socket.isClosed())
				line = ClientSocket.EXIT;
		}
		try {
			br.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println("客户端离开");
	}

}
